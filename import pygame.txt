import pygame
import sys
import random

# Inicialización de Pygame
pygame.init()

# Pantalla - ventana
W, H = 500, 400
PANTALLA = pygame.display.set_mode((500, 400))
pygame.display.set_caption('El pequeño Mammut')

# Fondo del juego
fondo = pygame.image.load(r"C:\Users\Pc\Desktop\Juego\Imagenes\Fondo.jpg")

# Personaje
quieto = pygame.image.load(r"C:\Users\Pc\Desktop\Juego\Imagenes\mamut.png")

caminaDerecha = [pygame.image.load(r'C:\Users\Pc\Desktop\Juego\Imagenes\mamut mov 1 der.png'),
                 pygame.image.load(r'C:\Users\Pc\Desktop\Juego\Imagenes\mamut mov 2 der.png')]

caminaIzquierda = [pygame.image.load(r'C:\Users\Pc\Desktop\Juego\Imagenes\mamut mov 1 izq.png'),
                 pygame.image.load(r'C:\Users\Pc\Desktop\Juego\Imagenes\mamut mov 2 izq.png')]

salta = [pygame.image.load(r'C:\Users\Pc\Desktop\Juego\Imagenes\mamut mov 1 ataque der.png'),
         pygame.image.load(r'C:\Users\Pc\Desktop\Juego\Imagenes\mamut mov 2 ataque der.png'),
         pygame.image.load(r'C:\Users\Pc\Desktop\Juego\Imagenes\mamut mov 3 ataque der.png')]

# Variables del personaje
x = 0
px = 50
py = 200
ancho = 40
velocidad = 10

# Control de FPS
reloj = pygame.time.Clock()

# Variables salto
salto = False
# Contador de salto
cuentaSalto = 10

# Variables dirección
izquierda = False
derecha = False

# Pasos
cuentaPasos = 0

# Listas para enemigos y balas
enemigos = []
balas = []

# Velocidades de enemigos y balas
velocidad_enemigo = 3
velocidad_bala = 7

# Movimiento
def recargaPantalla():
    global cuentaPasos, x

    # Fondo en movimiento
    fondo = pygame.image.load(r"C:\Users\Pc\Desktop\Juego\Imagenes\Fondo.jpg").convert()
    PANTALLA.blit(fondo,(0,0))
    x_relativa = x % fondo.get_rect().width
    PANTALLA.blit(fondo, (x_relativa - fondo.get_rect().width, 0))
    if x_relativa < W:
        PANTALLA.blit(fondo, (x_relativa, 0))
    x -= 5

    # Contador de pasos
    if cuentaPasos + 1 >= 2:
        cuentaPasos = 0
    # Movimiento a la izquierda
    if izquierda:
        PANTALLA.blit(caminaIzquierda[cuentaPasos // 1], (int(px), int(py)))
        cuentaPasos += 1
    # Movimiento a la derecha
    elif derecha:
        PANTALLA.blit(caminaDerecha[cuentaPasos // 1], (int(px), int(py)))
        cuentaPasos += 1
    # Movimiento de salto
    elif salto + 1 >= 3:
        PANTALLA.blit(salta[cuentaPasos // 1], (int(px), int(py)))
        cuentaPasos += 1
    # Personaje quieto
    else:
        PANTALLA.blit(quieto,(int(px), int(py)))

    # Dibujar enemigos
    for enemigo in enemigos:
        PANTALLA.blit(enemigo[0], enemigo[1])
    
    # Dibujar balas
    for bala in balas:
        pygame.draw.rect(PANTALLA, (255, 255, 0), bala)

# Bucle de acciones y controles
ejecuta = True
while ejecuta:
    # FPS
    reloj.tick(18)

    # Bucle del juego
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            ejecuta = False

    # Opción tecla pulsada
    keys = pygame.key.get_pressed()

    # Tecla A - Movimiento a la izquierda
    if keys[pygame.K_a] and px > velocidad:
        px -= velocidad
        izquierda = True
        derecha = False

    # Tecla D - Movimiento a la derecha
    elif keys[pygame.K_d] and px < 900 - velocidad - ancho:
        px += velocidad
        izquierda = False
        derecha = True

    # Personaje quieto
    else:
        izquierda = False
        derecha = False
        cuentaPasos = 0

    # Tecla W - Movimiento hacia arriba
    if keys[pygame.K_w] and py > 100:
        py -= velocidad

    # Tecla S - Movimiento hacia abajo
    if keys[pygame.K_s] and py < 300:
        py += velocidad

    # Tecla SPACE - Salto
    if not (salto):
        if keys[pygame.K_SPACE]:
            salto = True
            izquierda = False
            derecha = False
            cuentaPasos = 0
    else:
        if cuentaSalto >= -10:
            py -= (cuentaSalto * abs(cuentaSalto)) * 0.2
            cuentaSalto -= 1
        else:
            cuentaSalto = 10
            salto = False

    # Generar enemigos aleatoriamente
    if random.randint(1, 100) < 3:  # Probabilidad de 3% por frame
        enemigo = pygame.Surface((50, 50))
        enemigo.fill((255, 0, 0))  # Enemigo color rojo
        enemigo_rect = enemigo.get_rect()
        enemigo_rect.center = (random.randint(50, W-50), 0)
        enemigos.append([enemigo, enemigo_rect])

    # Mover enemigos
    for enemigo in enemigos[:]:
        enemigo[1].y += velocidad_enemigo
        if enemigo[1].top > H:
            enemigos.remove(enemigo)

        # Los enemigos disparan aleatoriamente
        if random.randint(1, 100) < 5:  # Probabilidad de 5% por frame
            bala_rect = pygame.Rect(enemigo[1].centerx, enemigo[1].bottom, 5, 10)
            balas.append(bala_rect)

    # Mover balas
    for bala in balas[:]:
        bala.y += velocidad_bala
        if bala.top > H:
            balas.remove(bala)

    # Actualización de la ventana
    recargaPantalla()
    pygame.display.update()

# Salida del juego
pygame.quit()
